<!--
  Copyright (c) 2021, Robby, Kansas State University
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

  1. Redistributions of source code must retain the above copyright notice, this
     list of conditions and the following disclaimer.
  2. Redistributions in binary form must reproduce the above copyright notice,
     this list of conditions and the following disclaimer in the documentation
     and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<idea-plugin>
    <id>org.sireum.intellij</id>
    <name>Sireum Kekinian</name>
    <version>5.0.0-SNAPSHOT</version>
    <vendor email="robby@santoslab.org" url="http://santoslab.org">SAnToS Lab, Kansas State University
    </vendor>

    <description><![CDATA[
        <a href="http://sireum.org">Sireum</a> is a high assurance system engineering platform being
        developed at SAnToS Laboratory, Kansas State University.
        This plugin integrates Sireum tools such as the Logika program verifier for Slang.
    ]]></description>

    <change-notes><![CDATA[

    ]]>
    </change-notes>

    <idea-version since-build="231.8109"/>

    <depends>com.intellij.modules.lang</depends>

    <depends>org.jetbrains.plugins.terminal</depends>

    <extensions defaultExtensionNs="com.intellij">
        <applicationConfigurable id="SireumConfigurable" instance="org.sireum.intellij.SireumConfigurable"
                                 displayName="Sireum" groupId="tools"/>

        <applicationConfigurable id="SireumLogikaConfigurable" instance="org.sireum.intellij.logika.LogikaConfigurable"
                                 displayName="Logika" parentId="SireumConfigurable"/>
    </extensions>

    <actions>
        <group id="SireumGroup" text="Sireum" popup="true">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </group>

        <action id="ProyekSyncAction" class="org.sireum.intellij.ProyekSyncAction"
                text="Synchronize Proyek" icon="icon/sync.png"
                description="Synchronize Proyek">
            <add-to-group group-id="SireumGroup" anchor="last"/>
        </action>

        <group id="SireumInsertGroup" text="Insert ..." popup="true">
            <add-to-group group-id="SireumGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        </group>

        <group id="LogikaGroup" text="Logika" popup="true">
            <add-to-group group-id="SireumGroup" anchor="last"/>
        </group>

        <group id="SlangGroup" text="Slang" popup="true">
            <add-to-group group-id="SireumGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        </group>

        <action id="LogikaCheckActionFile" class="org.sireum.intellij.logika.LogikaCheckActionFile"
                text="Logika Check (All in File)"
                description="Check all Logika proofs in the file">
            <add-to-group group-id="LogikaGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl W"/>
        </action>

        <action id="LogikaCheckActionLine" class="org.sireum.intellij.logika.LogikaCheckActionLine"
                text="Logika Check (Line)"
                description="Check Logika proofs focused on the cursor line">
            <add-to-group group-id="LogikaGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl S"/>
        </action>

        <action id="LogikaCheckActionInterprocedural" class="org.sireum.intellij.logika.LogikaCheckActionInterprocedural"
                text="Logika Check (Interprocedural Line)"
                description="Check Logika proofs focused on the cursor line inter-procedurally">
            <add-to-group group-id="LogikaGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl I"/>
        </action>

        <action id="LogikaSmt2Action" class="org.sireum.intellij.logika.LogikaSmt2Action"
                text="Launch SMT2 Solver"
                description="Launch SMT2 solver using the arguments in the file">
            <add-to-group group-id="LogikaGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl S"/>
        </action>

        <action id="SlangInsertConstructorVals" class="org.sireum.intellij.SlangInsertConstructorValsAction"
                text="Insert val Modifiers"
                description="Insert constructor parameter val modifiers">
            <add-to-group group-id="SlangGroup"/>
        </action>

        <action id="SlangRenumberProofSteps" class="org.sireum.intellij.SlangRenumberProofStepsAction"
                text="Renumber Proof Steps"
                description="Renumber proof steps">
            <add-to-group group-id="SlangGroup"/>
        </action>

        <action id="SlangReplaceEnumSymbols" class="org.sireum.intellij.SlangReplaceEnumSymbolsAction"
                text="Replace Enum Symbols"
                description="Replace enum symbols with strings">
            <add-to-group group-id="SlangGroup"/>
        </action>

        <action id="SireumInsertForAll" class="org.sireum.intellij.SireumInsertForAll"
                text="Forall"
                description="Insert forall symbol">
            <add-to-group group-id="SireumInsertGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl SEMICOLON" second-keystroke="A"/>
        </action>

        <action id="SireumInsertExists" class="org.sireum.intellij.SireumInsertExists"
                text="Exists"
                description="Insert exists symbol">
            <add-to-group group-id="SireumInsertGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl SEMICOLON" second-keystroke="E"/>
        </action>

        <action id="SireumInsertSequent" class="org.sireum.intellij.SireumInsertSequent"
                text="Sequent"
                description="Insert sequent symbol">
            <add-to-group group-id="SireumInsertGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl SEMICOLON" second-keystroke="BACK_SLASH"/>
        </action>

        <action id="SireumInsertEquiv" class="org.sireum.intellij.SireumInsertEquiv"
                text="Equiv"
                description="Insert equivalent symbol">
            <add-to-group group-id="SireumInsertGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl SEMICOLON" second-keystroke="EQUALS"/>
        </action>

        <action id="SireumInsertInequiv" class="org.sireum.intellij.SireumInsertInequiv"
                text="Inequiv"
                description="Insert inequivalent symbol">
            <add-to-group group-id="SireumInsertGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl SEMICOLON" second-keystroke="1"/>
        </action>
    </actions>

    <application-components>
        <component>
            <implementation-class>org.sireum.intellij.SireumApplicationComponent</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>org.sireum.intellij.SireumProjectComponent</implementation-class>
        </component>
    </project-components>

</idea-plugin>